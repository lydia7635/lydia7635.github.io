[{"content":"前言 雖然 hugo-theme-stack 這個主題，剛開始看的時候覺得簡單乾淨，也很符合個人審美觀，但看久了還是覺得一些地方可以稍加改進。\nTheme 掛載 其實這部分和修改並沒有直接的關係，不過目前打算是要同時保有可能會自己大改的空間，加上偶爾會想將原作者的更新加入，因此採用 fork + submodule 的方式，並且直接修改相關的程式碼。不過因為是大改，就算想發個 PR 幫幫忙也不行了：(\n雖然 Stack 這個主題很貼心的加入 custom 檔案，讓使用者自行調整1，但等筆者改完後才發現這個東西……（再不看 document 啊 Q_Q）所以筆者並不採用這個方式修改。\n修改內容 筆者有在網路上找到一些針對 Stack 這個主題的修改2，大部分也挺符合個人品味，所以也會拿部分來套用。\n將最後編輯時間移至上方 文章上方的 detail 原本就有放像是建立日期與預計閱讀時長3等時間相關資訊，那為何不將最後編輯時間也放在一起呢？\n從 hugo-theme-stack/layouts/partials/article/components/details.html 先開始編輯。這裡是設定文章詳細資訊的版面配置，可以在文章上方或文章清單中的預覽看到。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;date\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--published\u0026#34;\u0026gt; {{- .Date.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{- if ne .Lastmod .Date -}} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;edit\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--lastmod\u0026#34;\u0026gt; {{- .Lastmod.Format ( or .Site.Params.dateFormat.lastUpdated \u0026#34;Jan 02, 2006 15:04 MST\u0026#34; ) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{- end -}}  \n加上標示的部分，是從 hugo-theme-stack/layouts/partials/article/components/footer.html 的相關部分修改而來。 1 2 3 4 5 6 7 8  {{- if ne .Lastmod .Date -}} \u0026lt;section class=\u0026#34;article-lastmod\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;clock\u0026#34; }} \u0026lt;span\u0026gt; {{ T \u0026#34;article.lastUpdatedOn\u0026#34; }} {{ .Lastmod.Format ( or .Site.Params.dateFormat.lastUpdated \u0026#34;Jan 02, 2006 15:04 MST\u0026#34; ) }} \u0026lt;/span\u0026gt; \u0026lt;/section\u0026gt; {{- end -}}   參考完之後把這段刪掉。\n另外，可以注意到這邊使用其它 icon 來表示最後編輯日期，可以從 Tabler Icons 搜尋想要的 icon 。複製完貼到 hugo-theme-stack/assets/icons/edit.svg 中，需做以下修改：\n width=\u0026quot;24\u0026quot; height=\u0026quot;24\u0026quot; stroke-width=\u0026quot;2\u0026quot; stroke=\u0026quot;currentColor\u0026quot;  修改文章卡片圓角與字型字體 參見這篇2 的修改方式。\n在同一個檔案上，也順便修改一下網站字型。\n原本的中文字型如果為粗體，有種筆畫黏在一起的感覺，筆者改成 Noto Sans Traditional Chinese Light 300。\n 來個對照。上半部是修改前，下半部是修改後，看起來應該比較清爽些。\n先在 hugo-theme-stack/assets/scss/variables.scss 最上方加上\n@import url(\u0026#39;https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@300\u0026amp;display=swap\u0026#39;); 然後在 --zh-font-family 加上 \u0026quot;Noto Sans TC\u0026quot; ，記得要放在所有字型的前面。\n字體大小的部分，修改所有的 --article-font-size 為 1.6rem 即可。\n調整最後編輯日期出現條件 因為有在 config.yaml 上設定 enableGitInfo: true ，讓文章的最後編輯時間自動設定成 commit 時間，但又因只想顯示日期，變成會顯示文章建立日期等於編輯日期的狀況。\n筆者想要做的是，若在建立日期同一天編輯文章，也不會出現最後編輯日期的特殊設定。\n參考這篇4的設定，需要在 hugo-theme-stack/layouts/partials/article/components/details.html 修改如下（對，就是上面調整編輯時間位置的部分）： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  {{ if not .Date.IsZero }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;date\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--published\u0026#34;\u0026gt; {{- .Date.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ $date := .Date.Format \u0026#34;2006-01-02\u0026#34; }} {{ $lastmod := .Lastmod.Format \u0026#34;2006-01-02\u0026#34; }} {{- if and (ne $lastmod $date) (gt .Lastmod .Date) -}}  \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;edit\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--lastmod\u0026#34;\u0026gt; {{- .Lastmod.Format ( or .Site.Params.dateFormat.lastUpdated \u0026#34;Jan 02, 2006 15:04 MST\u0026#34; ) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{- end -}} {{ end }}   真是個有點拐彎抹腳的設定😅\n程式碼區塊調整 由於預設的程式碼區塊顏色主題為 monokai ，之後想換成 dracula，但發現套用後看起來有奇怪的效果：  程式碼區塊又圍了一圈顏色不同的 padding ，而且區塊並不是和文字切齊，而是對齊文章卡片邊緣。\n經過一番查詢與修改，最後會設定成這樣：  首先將 config.yaml 的 markup.highlight.style 設定為 dracula。 1 2 3  markup: highlight: style: dracula  \n若要將貼齊文章卡片邊緣的設定取消，需修改 hugo-theme-stack/assets/scss/partials/layout/article.scss，在檔案最下方的段落中，將 .highlight 與 pre（非 shortcode 產生的程式碼區塊）那行刪除。 1 2 3 4 5 6 7 8 9 10 11  /// Negative margins  blockquote, figure, .gallery, .video-wrapper, .table-wrapper, .s_video_simple { margin-left: calc((var(--card-padding)) * -1); margin-right: calc((var(--card-padding)) * -1); width: calc(100% + var(--card-padding) * 2); }  \n以上是同樣會貼齊文章卡片邊緣的區塊。\n而若欲產生區塊圓角，也在同樣檔案中設定： 1 2 3 4 5 6 7 8 9 10 11  .article-content { // ...  .highlight { background-color: var(--pre-background-color); padding: var(--card-padding); border-radius: 5px;  position: relative; // ...  } // ... }  \npre 的部分也做類似設定。\n但此時仍會因為 padding 顏色不同而顯得突兀。修改 hugo-theme-stack/assets/scss/variables.scss 最下方為：\n1 2 3 4 5  [data-scheme=\u0026#34;dark\u0026#34;] { --pre-text-color: #f8f8f2; --pre-background-color: #282a36;  @import \u0026#34;partials/highlight/dark.scss\u0026#34;; }   可惜的是，目前不能隨著主題自動設定相對應顏色。\nscrollbar 調整 覺得頁面與程式碼區塊的 scrollbar 太粗，並且程式碼區塊的 scrollbar 持續顯示有點醜，所以也設定一下。\n欲設定頁面的 scroll bar ，在 hugo-theme-stack/assets/scss/partials/base.scss 修改： 1 2 3 4 5 6 7 8 9 10 11  * { scrollbar-width: thin;  scrollbar-color: var(--scrollbar-thumb) transparent; } /**/ /* scrollbar styles for Chromium */ ::-webkit-scrollbar { width: 1rem; height: 1rem; }  \n::-webkit-scrollbar 中的 height 也需一併設定，才會套用到程式碼區塊。\n欲設定 scrollbar 圓角，也編輯相同檔案：\n1 2 3 4 5  /* scrollbar styles for Chromium */ ::-webkit-scrollbar-thumb { border-radius: 5px;  background-color: var(--scrollbar-thumb); }   不過目前 Firefox 並不支援設定 scrollbar 圓角，希望之後會盡快推出。\n接下來編輯程式碼區塊中，將滑鼠移至該區塊才顯現 scrollbar 的設定。在 hugo-theme-stack/assets/scss/partials/layout/article.scss 加上以下兩個段落： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  .article-content { // ...  pre { // ...  ::-webkit-scrollbar-thumb { visibility: hidden; } \u0026amp;:hover { ::-webkit-scrollbar-thumb { visibility: visible; } }  // ...  } .highlight { // ...  ::-webkit-scrollbar-thumb { visibility: hidden; } \u0026amp;:hover { ::-webkit-scrollbar-thumb { visibility: visible; } }  // ...  } }  \n然後不知為何，使用 scrollbar-width 不能對 Firefox 做類似設定：(\n經測試，在 Edge 與 Chrome 上應該是能正確顯示的，然而筆者沒有 Safari 的測試環境，所以不知道會不會炸掉😥\n 未完待續。\n  Modify theme | Hugo theme Stack\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Bigs3cir\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 目前覺得這個功能在本站有點雞肋，就先關掉了\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n How to Add a Last Modified Date in Hugo Articles - Simplernerd\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2022-02-18T00:00:00Z","permalink":"https://lydia7635.github.io/p/modify-hugo-theme-stack/","title":"[Hugo] 修改 Hugo Stack 主題"},{"content":"前言 因為 GitHub 政策改變，會將預設的 branch 設為 main ，發現本地端使用 git init 時還是以 master 當成預設。在工作站使用 git config --global init.defaultBranch main 是有效的，但在個人筆電上的 WSL 卻仍是沒有反應。\n查了一下資料1後發現和 git 版本有關，工作站上目前是 2.30.1 ，WSL 目前是 2.25.1 ，而要讓 defaultBranch 生效，需要讓版本升級為 2.28 以上。（22-02-18 更：工作站目前是 2.35.1 ，而 Ubuntu 未做此調整前仍是 2.28 以下）\n如果輸入 sudo apt install git 讓它重新檢查 git 的版本不會升級，因此需要加入 PPA 個人套件庫。\n新增 PPA 個人套件庫 依照此篇指示2，依序輸入下列指令 sudo add-apt-repository ppa:git-core/ppa sudo apt-get update sudo apt-get install git\n安裝完後，使用 git --version 確認版本。\n雖然版本是 2.30.0，比工作站上舊，但還是可以使用 defaultBranch 了。（22-02-18 更：目前也可以升級成和工作站同為 2.35.1 版）\n結語 平常自己的使用習慣，不會使用到額外的套件庫來裝東西，藉此機會記錄一下使用方式。\n  Git init not working as usual - Reddit\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n ubuntu - How can I update to a newer version of Git using apt-get? - Unix \u0026amp; Linux Stack Exchange\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-02-21T00:00:00Z","permalink":"https://lydia7635.github.io/p/upgrade-git-to-newer-version-with-ppa/","title":"[Git] 使用 PPA 將 git 升級成較新版 (Ubuntu)"},{"content":"雖然有網站將教學寫得很清楚了，不過還是來記錄一下。\n操作 首先，先在搜尋框找到 BotFather 並點選 start ，之後會出現各指令的簡單介紹。\n 如果未來想再看一次此資訊，可以輸入 /start\n接下來輸入 /newbot 新增一個聊天機器人，並依序輸入對外顯示名稱及機器人 ID。\n 其中，對外顯示名稱 (name for bot) 是未來公布聊天機器人的名稱，可以是中文，在此設為 lydia7635_test。而機器人 ID (username for bot) 僅能為英文，不可和他人重複，並且結尾須為 bot ，在此設為 lydia7635_test_bot。\n接下來，拿到的 HTTP API 請勿公開，否則別人可以控制你的聊天機器人。若忘記也可以在和 BotFather 的對話中輸入 /mybots 查詢或修改。\n參考資料  [教學] 第一步: 建立 Telegram聊天機器人 (Chatbot) - LINE官方帳號 \u0026amp; Telegram 行銷專家，幫助你快速上手 | 天長互動創意  ","date":"2021-02-18T00:00:00Z","image":"https://lydia7635.github.io/img/post/telegram-pixabay.jpg","permalink":"https://lydia7635.github.io/p/create-telegram-bot/","title":"[Telegram] 建立聊天機器人"}]