[{"content":"前言 雖然 hugo-theme-stack 這個主題，剛開始看的時候覺得簡單乾淨，也很符合個人審美觀，但看久了還是覺得一些地方可以稍加改進。\nTheme 掛載 其實這部分和修改並沒有直接的關係，不過目前打算是要同時保有可能會自己大改的空間，加上偶爾會想將原作者的更新加入，因此採用 fork + submodule 的方式，並且直接修改相關的程式碼。不過因為是大改，就算想發個 PR 幫幫忙也不行了：(\n雖然 Stack 這個主題很貼心的加入 custom 檔案，讓使用者自行調整1，但等筆者改完後才發現這個東西……（再不看 document 啊 Q_Q）所以筆者並不採用這個方式修改。\n修改內容 筆者有在網路上找到一些針對 Stack 這個主題的修改2，大部分也挺符合個人品味，所以也會拿部分來套用。\n將修改時間移至上方 文章上方的 detail 原本就有放像是建立日期與預計閱讀時長3等時間相關資訊，那為何不將修改時間也放在一起呢？\n從 hugo-theme-stack/layouts/partials/article/components/details.html 先開始編輯。這裡是設定文章詳細資訊的版面配置，可以在文章上方或文章清單中的預覽看到。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;date\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--published\u0026#34;\u0026gt; {{- .Date.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{- if ne .Lastmod .Date -}} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;edit\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--lastmod\u0026#34;\u0026gt; {{- .Lastmod.Format ( or .Site.Params.dateFormat.lastUpdated \u0026#34;Jan 02, 2006 15:04 MST\u0026#34; ) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{- end -}}  \n加上標示的部分，是從 hugo-theme-stack/layouts/partials/article/components/footer.html 的相關部分修改而來。 1 2 3 4 5 6 7 8  {{- if ne .Lastmod .Date -}} \u0026lt;section class=\u0026#34;article-lastmod\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;clock\u0026#34; }} \u0026lt;span\u0026gt; {{ T \u0026#34;article.lastUpdatedOn\u0026#34; }} {{ .Lastmod.Format ( or .Site.Params.dateFormat.lastUpdated \u0026#34;Jan 02, 2006 15:04 MST\u0026#34; ) }} \u0026lt;/span\u0026gt; \u0026lt;/section\u0026gt; {{- end -}}   參考完之後把這段刪掉。\n另外，可以注意到這邊使用其它 icon 來表示修改日期，可以從 Tabler Icons 搜尋想要的 icon 。複製完貼到 hugo-theme-stack/assets/icons/edit.svg 中，需做以下修改：\n width=\u0026quot;24\u0026quot; height=\u0026quot;24\u0026quot; stroke-width=\u0026quot;2\u0026quot; stroke=\u0026quot;currentColor\u0026quot;  修改文章卡片圓角 參見這篇2 的修改方式。\n在同一個檔案上，也順便修改一下網站字型。\n原本的中文字型如果為粗體，有種筆畫黏在一起的感覺，筆者改成 Noto Sans Traditional Chinese Light 300。\n 來個對照。上半部是修改前，下半部是修改後，看起來應該比較清爽些。\n先在 hugo-theme-stack/assets/scss/variables.scss 最上方加上\n@import url(\u0026#39;https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@300\u0026amp;display=swap\u0026#39;); 然後在 --zh-font-family 加上 \u0026quot;Noto Sans TC\u0026quot; ，記得要放在所有字型的前面。\n未完待續。\n  Modify theme | Hugo theme Stack\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Bigs3cir\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 目前覺得這個功能在本站有點雞肋，就先關掉了\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2022-02-18T00:00:00Z","permalink":"https://lydia7635.github.io/p/modify-hugo-theme-stack/","title":"[Hugo] 修改 Hugo Stack 主題"},{"content":"前言 因為 GitHub 政策改變，會將預設的 branch 設為 main ，發現本地端使用 git init 時還是以 master 當成預設。在工作站使用 git config --global init.defaultBranch main 是有效的，但在個人筆電上的 WSL 卻仍是沒有反應。\n查了一下資料1後發現和 git 版本有關，工作站上目前是 2.30.1 ，WSL 目前是 2.25.1 ，而要讓 defaultBranch 生效，需要讓版本升級為 2.28 以上。\n如果輸入 sudo apt install git 讓它重新檢查 git 的版本不會升級，因此需要加入 PPA 個人套件庫。\n新增 PPA 個人套件庫 依照此篇指示2，依序輸入下列指令 sudo add-apt-repository ppa:git-core/ppa sudo apt-get update sudo apt-get install git\n安裝完後，使用 git --version 確認版本。\n雖然版本是 2.30.0，比工作站上舊，但還是可以使用 defaultBranch 了。\n結語 平常自己的使用習慣，不會使用到額外的套件庫來裝東西，藉此機會記錄一下使用方式。\n  Git init not working as usual - Reddit\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n ubuntu - How can I update to a newer version of Git using apt-get? - Unix \u0026amp; Linux Stack Exchange\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-02-21T00:00:00Z","permalink":"https://lydia7635.github.io/p/upgrade-git-to-newer-version-with-ppa/","title":"[Git] 使用 PPA 將 git 升級成較新版 (Ubuntu)"},{"content":"雖然有網站將教學寫得很清楚了，不過還是來記錄一下。\n操作 首先，先在搜尋框找到 BotFather 並點選 start ，之後會出現各指令的簡單介紹。\n 如果未來想再看一次此資訊，可以輸入 /start\n接下來輸入 /newbot 新增一個聊天機器人，並依序輸入對外顯示名稱及機器人 ID。\n 其中，對外顯示名稱 (name for bot) 是未來公布聊天機器人的名稱，可以是中文，在此設為 lydia7635_test。而機器人 ID (username for bot) 僅能為英文，不可和他人重複，並且結尾須為 bot ，在此設為 lydia7635_test_bot。\n接下來，拿到的 HTTP API 請勿公開，否則別人可以控制你的聊天機器人。若忘記也可以在和 BotFather 的對話中輸入 /mybots 查詢或修改。\n參考資料  [教學] 第一步: 建立 Telegram聊天機器人 (Chatbot) - LINE官方帳號 \u0026amp; Telegram 行銷專家，幫助你快速上手 | 天長互動創意  ","date":"2021-02-18T00:00:00Z","image":"https://lydia7635.github.io/img/post/telegram-pixabay.jpg","permalink":"https://lydia7635.github.io/p/create-telegram-bot/","title":"[Telegram] 建立聊天機器人"}]